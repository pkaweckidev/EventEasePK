@page "/attendees"
@page "/attendees/{EventId:int}"
@using EventManagerPK.Models
@using EventManagerPK.Services
@inject IEventService EventService
@inject NavigationManager Navigation

<PageTitle>Event Attendance Tracker</PageTitle>

<div class="container mt-4">
    <h2 class="mb-4">Event Attendance Tracker</h2>

    <div class="row">
        <!-- Lista wydarzeń -->
        <div class="col-md-4">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Events</h5>
                </div>
                <div class="card-body p-0">
                    @if (Events == null)
                    {
                        <div class="p-3">
                            <p>Loading events...</p>
                        </div>
                    }
                    else if (!Events.Any())
                    {
                        <div class="p-3">
                            <p>No events available.</p>
                        </div>
                    }
                    else
                    {
                        <div class="list-group list-group-flush">
                            @foreach (var eventItem in Events)
                            {
                                <button type="button"
                                        class="list-group-item list-group-item-action @(selectedEventId == eventItem.Id ? "active" : "")"
                                        @onclick="() => SelectEvent(eventItem.Id)">
                                    <div class="d-flex w-100 justify-content-between">
                                        <h6 class="mb-1">@eventItem.Title</h6>
                                        <small>@eventItem.Date.ToString("MMM dd")</small>
                                    </div>
                                    <small>@eventItem.Location</small>
                                </button>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Detale uczestników -->
        <div class="col-md-8">
            @if (selectedEventId == 0)
            {
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title text-muted text-center my-5">Select an event to view attendees</h5>
                    </div>
                </div>
            }
            else
            {
                <div class="card">
                    <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Attendees for @selectedEvent?.Title</h5>
                        <span class="badge bg-light text-dark">@(EventAttendees?.Count ?? 0) attendees</span>
                    </div>
                    <div class="card-body">
                        @if (selectedEvent == null)
                        {
                            <p>Loading event details...</p>
                        }
                        else if (EventAttendees == null)
                        {
                            <p>Loading attendees...</p>
                        }
                        else if (!EventAttendees.Any())
                        {
                            <div class="alert alert-info">
                                <i class="bi bi-info-circle me-2"></i> No attendees registered for this event yet.
                            </div>
                        }
                        else
                        {
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th>Name</th>
                                            <th>Email</th>
                                            <th>Phone</th>
                                            <th>Location</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var attendee in EventAttendees)
                                        {
                                            <tr>
                                                <td>@attendee.Name</td>
                                                <td>@attendee.Email</td>
                                                <td>@attendee.PhoneNumber</td>
                                                <td>@attendee.City, @attendee.Country</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }

                        <div class="mt-3">
                            <h6>Event Details</h6>
                            <div class="row g-3">
                                <div class="col-md-6">
                                    <div class="mb-2"><strong>Date:</strong> @selectedEvent.Date.ToString("D")</div>
                                    <div class="mb-2"><strong>Location:</strong> @selectedEvent.Location</div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-2"><strong>Price:</strong> @selectedEvent.Price.ToString("C")</div>
                                    <div class="mb-2"><strong>Available Tickets:</strong> @selectedEvent.AvailableTickets</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int EventId { get; set; }

    private int selectedEventId = 0;
    private Event? selectedEvent = null;
    private List<Event>? Events { get; set; }
    private List<Attendee>? EventAttendees { get; set; }

    protected override async Task OnInitializedAsync()
    {
        // Ładuj listę wszystkich wydarzeń
        Events = await EventService.GetAllEventsAsync();

        // Jeśli podano EventId w URL, wybierz to wydarzenie
        if (EventId > 0)
        {
            await SelectEvent(EventId);
        }
    }

    private async Task SelectEvent(int eventId)
    {
        selectedEventId = eventId;
        selectedEvent = await EventService.GetEventByIdAsync(eventId);
        EventAttendees = await EventService.GetAttendeesByEventIdAsync(eventId);

        // Zaktualizuj URL bez przeładowywania strony
        Navigation.NavigateTo($"/attendees/{eventId}", false);
    }
}